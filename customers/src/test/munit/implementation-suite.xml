<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-suite.xml" />
	<munit:test name="getAllCustomers-test" doc:id="11e20d83-ad09-4e47-a07a-fcbbf57d930d">
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="ba67836c-e046-4470-b640-3ddaee034816" >
				<munit:payload value="#[output application/json --- readUrl('classpath://getAllCustomerstest\set-event_payload3.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://getAllCustomerstest\set-event_attributes3.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getAllCustomerstest\set-event_variable_3.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getAllCustomers" doc:id="69f7fe13-d771-40b8-887e-88db15e902b6" name="getAllCustomers"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="5b772f7b-330c-45e8-84d7-0c6bc95e8ed4" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getAllCustomerstest::assert_expression_payload3
---
assert_expression_payload3::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="getCustomerByID-test" doc:id="b67a0cad-15af-4d1d-b62a-955ffbeb8291" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="893a48f0-2e87-4b46-9c6d-3b5c11a20507" >
				<munit:payload value="#[output application/json --- readUrl('classpath://getCustomerByIDtest\set-event_payload2.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://getCustomerByIDtest\set-event_attributes2.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getCustomerByIDtest\set-event_variable_4.dwl')]" />
					<munit:variable key="CIID" value="#[output application/java --- readUrl('classpath://getCustomerByIDtest\set-event_variable_5.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getCustomerByID" doc:id="74c3698d-b65e-474c-9a17-3882eeb4bf31" name="getCustomerByID"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="3ff8e8e5-1e2b-4e19-9890-af9a427edc0f" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getCustomerByIDtest::assert_expression_payload2
---
assert_expression_payload2::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
